apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app # Deployment name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-app # Selector to match pods with the same label
  template:
    metadata:
      labels:
        app: backend-app # Labels for the pods
    spec:
      containers:
      - name: backend-app-container # Container name
        image: us-central1-docker.pkg.dev/$PROJECT_ID/distributed-tracing-docker-repo/http-app:latest # Container image
        ports:
        - containerPort: 8080 # Port exposed by the container
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /app/service_account_file.json # Set at container level, path to service account file
        - name: DESTINATION_URL
          value: "https://www.google.com" # Set at container level, destination URL
        - name: PORT
          value: "8080" # Set at container level, port value
        - name: OTEL_SERVICE_NAME
          value: "backend-application" # Set at container level, service name for tracing
        volumeMounts:
        - name: gcp-credentials
          mountPath: /app/service_account_file.json # Set at container level, mount path for the secret file
          subPath: service_account_file.json # Specific file within the secret
      volumes:
      - name: gcp-credentials
        secret:
          secretName: gcp-credentials-secret # Volume level, references the secret containing the service account file
# the secret has been previousely created with the sa key info:
#kubectl create secret generic gcp-credentials-secret --from-file=service_account_file.json=/path/to/your/service_account_file.json
#-------------------------# 
#another way to reference the secret:
# - name: GOOGLE_APPLICATION_CREDENTIALS
#           valueFrom:
#             secretKeyRef:
#               name: gcp-credentials-secret
#               key: service_account_file.json